// Generated by CoffeeScript 1.3.3
var Constants, Dance, States, Tokens;

Constants = null;

Tokens = {
  stationary: 0,
  up: 1,
  down: 2,
  left: 3,
  right: 4,
  forward: 5,
  back: 6
};

States = {
  running: 0,
  paused: 1,
  done: 2
};

Dance = {
  move_threshold: 10,
  dance: [],
  state: States.done,
  register_sample: function(sample) {
    var dt, dx, dy, dz, ea, eb, event_check, sa, sb, ta, tb, time, _ref;
    if (this.state === States.done) {
      return sample = sample.acceleration;
    }
    time = Date.now();
    if (this.state === States.paused && time < this.section_end) {
      return;
    } else {
      this.state = States.running;
      this.section_end += this.section_length;
    }
    this.current_samples.push([sample, time]);
    if (time > this.section_end) {
      if (this.section_counter > this.dance.length) {
        this.dance.append(this.section_events);
        this.section_counter = 0;
        this.section_end += this.pause_length;
        this.state = States.paused;
      } else {
        this.section_end += this.section_length;
        this.section_counter += 1;
      }
    }
    if (time > this.song_end) {
      this.state = States.done;
      UI.victory();
      return;
    }
    event_check = false;
    if (sample.x + sample.y + sample.z > this.move_threshold) {
      this.section_events.push([sample, time]);
      event_check = true;
    }
    if (this.section_counter < this.dance.length && event_check) {
      ea = this.section_events[-1];
      sa = ea[0];
      ta = ea[1];
      eb = this.dance[-1][this.section_events.length - 1];
      sb = eb[0];
      tb = eb[1];
      _ref = [Math.abs(sa.x - sb.x), Math.abs(sa.y - sb.y), Math.abs(sa.z - sb.z)], dx = _ref[0], dy = _ref[1], dz = _ref[2];
      dt = 10 * Math.abs(ta - tb);
      if (Math.max(dx, dy, dz, dt) > this.score_threshold) {
        this.end_dance();
      }
    }
  },
  start_dance: function() {
    this.dance = [];
    this.current_samples = [];
    return this.current_state = States.paused;
  },
  end_dance: function() {
    this.state = States.done;
    return UI.game_over();
  }
};
